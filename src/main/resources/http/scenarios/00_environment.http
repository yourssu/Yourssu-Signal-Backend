### Environment variables for API testing
### Copy this file to http-client.env.json and update values as needed
### Quick setup instructions:
# 1. Start the Spring Boot application
# 2. Run scenarios in order:
#    - 01_auth_register.http: Register users and get tokens
#    - 02_viewer_verification.http: Set up viewer accounts
#    - 03_profile_creation.http: Create user profiles
#    - 04_payment_flow.http: Test payment and ticket purchase
#    - 05_profile_interaction.http: Test profile viewing and interactions
#
# Variables are stored globally between requests:
# - maleAccessToken, femaleAccessToken: Authentication tokens
# - maleUuid, femaleUuid: User UUIDs
# - maleProfileId, femaleProfileId: Created profile IDs
# - maleVerificationCode, femaleVerificationCode: Verification codes
#
# For IntelliJ IDEA HTTP Client:
# 1. Create http-client.env.json file:
# {
#   "dev": {
#     "host": "http://localhost:8080",
#     "adminSecretKey": "your_secret_key"
#   },
#   "prod": {
#     "host": "https://api.yourdomain.com",
#     "adminSecretKey": "production_secret_key"
#   }
# }
#
# 2. Select environment in the IDE's HTTP client dropdown
# 3. Run requests sequentially or individually
#
# For VS Code REST Client:
# 1. Create .env file:
# HOST=http://localhost:8080
# ADMIN_SECRET_KEY=your_secret_key
#
# 2. Update variable references from {{host}} to {{$dotenv HOST}}
# 3. Use # @name requestName to name requests
# 4. Reference previous responses with {{requestName.response.body.$.result.field}}
